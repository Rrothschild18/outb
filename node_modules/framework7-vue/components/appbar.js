import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from "vue";

function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("div", {
    class: _normalizeClass(_ctx.classes)
  }, [_renderSlot(_ctx.$slots, "before-inner"), _ctx.inner ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: _normalizeClass(_ctx.innerClasses)
  }, [_renderSlot(_ctx.$slots, "default")], 2)) : _renderSlot(_ctx.$slots, "default", {
    key: 1
  }), _renderSlot(_ctx.$slots, "after-inner")], 2);
}

import { computed } from 'vue';
import { classNames } from '../shared/utils.js';
import { colorClasses, colorProps } from '../shared/mixins.js';
export default {
  name: 'f7-appbar',
  render,
  props: {
    noShadow: Boolean,
    noHairline: Boolean,
    inner: {
      type: Boolean,
      default: true
    },
    innerClass: String,
    innerClassName: String,
    ...colorProps
  },

  setup(props) {
    const classes = computed(() => classNames('appbar', {
      'no-shadow': props.noShadow,
      'no-hairline': props.noHairline
    }, colorClasses(props)));
    const innerClasses = computed(() => classNames('appbar-inner', props.innerClass, props.innerClassName));
    return {
      classes,
      innerClasses
    };
  }

};